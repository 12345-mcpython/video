# Generated by Django 4.1.4 on 2022-12-30 19:06

from django.db import migrations, models
import django.db.models.deletion
import taggit.managers


class Migration(migrations.Migration):

    dependencies = [
        ('taggit', '0005_auto_20220424_2025'),
        ('user', '0007_alter_user_description_alter_user_name_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
                ('like', models.IntegerField()),
                ('is_topping', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': '评论',
                'verbose_name_plural': '评论',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=30)),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('description', models.TextField(blank=True, default='', max_length=300)),
                ('cover', models.ImageField(default='cover/default.png', upload_to='cover')),
                ('view', models.IntegerField(default=0)),
                ('like', models.IntegerField(default=0)),
                ('share', models.IntegerField(default=0)),
                ('danmaku', models.IntegerField(default=0)),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
            ],
            options={
                'verbose_name': '视频',
                'verbose_name_plural': '视频',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.AddField(
            model_name='user',
            name='comment_like_list',
            field=models.JSONField(default=[]),
        ),
        migrations.AddField(
            model_name='user',
            name='video_like_list',
            field=models.JSONField(default=[]),
        ),
        migrations.CreateModel(
            name='VideoPage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_title', models.CharField(max_length=15)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.video')),
            ],
            options={
                'verbose_name': '视频',
                'verbose_name_plural': '视频',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('followed', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='followed_user', to='user.user')),
                ('follower', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, related_name='follower_user', to='user.user')),
            ],
        ),
        migrations.CreateModel(
            name='CommentReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=1000)),
                ('like', models.IntegerField()),
                ('is_topping', models.BooleanField(default=False)),
                ('publish_date', models.DateTimeField(auto_now_add=True)),
                ('comment', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.comment')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.user')),
            ],
            options={
                'verbose_name': '评论回复',
                'verbose_name_plural': '评论回复',
                'ordering': ['-publish_date'],
            },
        ),
        migrations.AddField(
            model_name='comment',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.user'),
        ),
        migrations.AddField(
            model_name='comment',
            name='video',
            field=models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='user.video'),
        ),
    ]
