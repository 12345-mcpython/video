"""
Django settings for video project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""

import json
import os
import uuid
from pathlib import Path

import pymysql

pymysql.install_as_MySQLdb()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent

with open("config.json", encoding="utf-8") as f:
    config = json.loads(f.read())['config']

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = config['index'].get("key", uuid.uuid4())

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []

TITLE = config['index'].get("title", "TEST")

# 半年时间 365 / 2 * 24 * 60 * 60
LOGIN_TIME = config['index'].get("login_time", 15768000)

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'front',
    'user',
    # django-taggit
    'taggit',
    'create'
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'video.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'video.wsgi.application'

# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': config['mysql'].get("database", "video"),
        'HOST': config['mysql'].get("host", "127.0.0.1"),
        'PORT': config['mysql'].get("port", 3306),
        'USER': config['mysql'].get("username", "root"),
        'PASSWORD': config['mysql'].get("password")
    }
}

REDIS_HOST = config['redis'].get("host", "127.0.0.1")

REDIS_PORT = config['redis'].get("port", 6379)

REDIS_DB = config['redis'].get("db", 0)

CACHES = {
    "default": {
        "BACKEND": "django.core.cache.backends.redis.RedisCache",
        "LOCATION": f"redis://{REDIS_HOST}:{REDIS_PORT}/{REDIS_DB}",
    }
}

SESSION_ENGINE = "django.contrib.sessions.backends.cache"

SESSION_CACHE_ALIAS = "default"

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'zh-hans'

TIME_ZONE = 'Asia/Shanghai'

USE_I18N = True

USE_L10N = True

USE_TZ = False

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

STATIC_ROOT = os.path.join(BASE_DIR, "static/")

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'
# Email

DEFAULT_FILE_STORAGE = "video.storage.AvatarStorage"

EMAIL_HOST = config['email'].get("email_host", "smtp.qq.com")

EMAIL_PORT = config['email'].get("email_port", 465)

EMAIL_HOST_USER = config['email'].get("email_host_user")

EMAIL_HOST_PASSWORD = config['email'].get("email_host_password")

EMAIL_USE_SSL = config['email'].get("email_use_ssl", False)

EMAIL_USE_TLS = config['email'].get("email_use_tls", False)

STORAGE_TYPE = config['storage'].get("type", "")

OSS_ACCESS_KEY = config['storage'].get("ak", "")

OSS_SECRET_KEY = config['storage'].get("sk", "")

OSS_BUCKET = config['storage'].get("bucket", "")

OSS_ENDPOINT = config['storage'].get("endpoint", "")

PORN_VERIFY = config['index'].get("porn_verify_server", None)

CONVERT_ENDPOINT = config['convert'].get("endpoint")

CONVERT_ACCESS_KEY = config['convert'].get("ak")

CONVERT_SECERT_KEY = config['convert'].get("sk")

CONVERT_PROJECT_ID = config['convert'].get("project_id")

CONVERT_USE_BUCKET = config['convert'].get("use_bucket")

FILE_UPLOAD_MAX_MEMORY_SIZE = 0